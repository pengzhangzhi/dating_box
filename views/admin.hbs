<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <title>开始使用 layui</title>
  <!-- 引入 layui.css -->
<link rel="stylesheet" href="https://layui.11dz.cn/layui-v2.6.8/layui/css/layui.css">
<link rel="stylesheet" href="//unpkg.com/layui@2.6.8/dist/css/layui.css">
<!-- 引入 layui.js -->

</head>
<body>

<div class="demoTable">
 搜索盲盒：
 <div class="layui-inline">
 <input class="layui-input" name="keyword" id="demoReload" autocomplete="off">
 </div>
 <button class="layui-btn" data-type="reload">搜索</button>
</div>

<table class="layui-hide" id="demo" lay-filter="test"></table>

<script type="text/html" id="barDemo">
  <a class="layui-btn layui-btn-primary layui-btn-xs" lay-event="detail">查看</a>
  <a class="layui-btn layui-btn-xs" lay-event="more">更多 <i class="layui-icon layui-icon-down"></i></a>
</script>



<blockquote class="layui-elem-quote layui-hide layui-text" id="footer">当前版本：layui v{{ layui.v }}</blockquote>


<script src="https://layui.11dz.cn/layui-v2.6.8/layui/layui.js"></script>
<script>
layui.config({
  version: '1632428048260' //为了更新 js 缓存，可忽略
});

//加载模块
layui.use(function(){ //亦可加载特定模块：layui.use(['layer', 'laydate', function(){
  //得到各种内置组件
  
  var layer = layui.layer //弹层
  ,laypage = layui.laypage //分页
  ,laydate = layui.laydate //日期
  ,table = layui.table //表格
  ,carousel = layui.carousel //轮播
  ,upload = layui.upload //上传
  ,element = layui.element //元素操作
  ,slider = layui.slider //滑块
  ,dropdown = layui.dropdown //下拉菜单
  $ = layui.jquery;

  

  //向世界问个好
  layer.msg('盲盒管理');

  //监听Tab切换
  element.on('tab(demo)', function(data){
    layer.tips('切换了 '+ data.index +'：'+ this.innerHTML, this, {
      tips: 1
    });
  });

  //执行一个 table 实例
  table.render({
    elem: '#demo'
    ,height: 450
    ,url: '/boxes' //数据接口
    ,title: '用户表'
    ,id:"demo"
    ,page: true //开启分页
    ,toolbar: 'default' //开启工具栏，此处显示默认图标，可以自定义模板，详见文档
    ,totalRow: true //开启合计行
    ,cols: [[ //表头
      {type: 'checkbox', fixed: 'left'}
      ,{field: 'id', title: 'ID', width:80, sort: true, fixed: 'left', totalRowText: '合计：'}
      ,{field: 'gender', title: '性别', width:80}
      ,{field: 'content', title: '内容', width:1400}
      ,{field: 'picked', title: '被抽取次数', width: 120, sort: true, totalRow: true}

      ,{fixed: 'right', width: 150, align:'center', toolbar: '#barDemo'}
    ]]
  });

  $(".layui-btn").click(function(){
    layer.msg("!!")
    var content = $(".layui-input").val()
    layer.msg(content)
    {{!-- table.reload("demo",{
      url:"/retrieve_content",
      ,where: {
      "content" : content
      }
      ,page: {
      curr: 1
      }
      ,done:function(){
        this.where = {}
      }
    }) --}}
    table.render()
    return false
  })

  //监听头工具栏事件
  table.on('toolbar(test)', function(obj){
    var checkStatus = table.checkStatus(obj.config.id)
    ,data = checkStatus.data; //获取选中的数据
    switch(obj.event){
      case 'add':
        layer.msg('无法添加盲盒！');
      break;
      case 'update':
        if(data.length === 0){
          layer.msg('请选择一行');
        } else if(data.length > 1){
          layer.msg('只能同时编辑一个');
        } else {
          layer.alert('编辑 [id]：'+ checkStatus.data[0].id);
          // 向服务端发送编辑（更新）操作
        }
      break;
      case 'delete':
        if(data.length === 0){
          layer.msg('请选择一行');
        } else {
          layer.msg('删除');
        }
      break;
    };
  });

  //监听行工具事件
  table.on('tool(test)', function(obj){ //注：tool 是工具条事件名，test 是 table 原始容器的属性 lay-filter="对应的值"
    var data = obj.data //获得当前行数据
    ,layEvent = obj.event; //获得 lay-event 对应的值
    if(layEvent === 'detail'){
      layer.msg(data.content);
    } else if(layEvent === 'more'){
      //下拉菜单
      dropdown.render({
        elem: this //触发事件的 DOM 对象
        ,show: true //外部事件触发即显示
        ,data: [{
          title: '编辑'
          ,id: 'edit'
        },{
          title: '删除'
          ,id: 'del'
        }]
        ,click: function(menudata){
          if(menudata.id === 'del'){
            layer.confirm('真的删除行么', function(index){
              
              //向服务端发送删除操作 
              $.getJSON("/delete_box",{id:data.id},function(d){
                if(d.code == 0){
                  layer.msg(`${data.id} has been deleted.`)
                  obj.del(); //删除对应行（tr）的DOM结构
                  layer.close(index);
                }
                else{
                  layer.msg(`fail to delete ${data.id}.`)
                }
              })
              

            });
          } else if(menudata.id === 'edit'){
            //向服务端发送编辑指令
            // https://www.bilibili.com/video/BV1kX4y1N7Lk?p=27&spm_id_from=pageDriver
              // 弹出更新页面弹出层
              // 数据回显 success
              // end，完成以下操作。
            
            $.getJSON("/update_box",{id:id,content:content,gender:gender,picked:picked},function(d){
              if(d.code == 0){
                  layer.msg(`${data.id} has been updated.`)
                  obj.update({
                  id:id,
                  content:content,
                  gender:gender,
                  picked:picked
              
                  });
                }
                else{
                  layer.msg(`fail to update ${data.id}.`)
                }
            })
              
          }
        }
        ,align: 'right' //右对齐弹出（v2.6.8 新增）
        ,style: 'box-shadow: 1px 1px 10px rgb(0 0 0 / 12%);' //设置额外样式
      })
    }
  });

  

  table.on('edit(test)', function(obj){ //注：edit是固定事件名，test是table原始容器的属性 lay-filter="对应的值"
  console.log(obj.value); //得到修改后的值
  console.log(obj.field); //当前编辑的字段名
  console.log(obj.data); //所在行的所有相关数据  
  });





});
</script>
</body>
</html>
